EPP La idea de GIT es que tienes un puntero * (HEAD) que te dice en que parte del repositorio estas,  entonces, puedes irte moviendote entre branches con git checkout branch y hacerles commits que harán que esa rama crezca, luego los peuedes unir con git merge: voy a la rama que le quiero pasar las cosas con git checkout main, y luego ahi git merge otraRama y pero queda en el historial dos vias que se unen, si no quieres que sea asi, sino solo una via, hay que usar git rebase.

Branching en Linux: 

1. Crear rama y cambiar de rama: 
git checkout -b [yourbranchname]
estando en la rama: git branch. 

2. Cambiar de rama: 
git checkout rama 
git switch rama 

HEAD ----------------------------------------------------------------: 
Es un puntero para viajar en el tiempo en el proyecto, puedo ir a cualquier punto de proyecto con git checkout + brach o + commit. 
A---B---C---D  (main)
        ↑
      HEAD
Todo los commits que haga se pondran en C. 

Ahora, si quiero subir a la versión anterior, entonces debo poner reative refs: 
git checkout ^rama (igual a HEAD~1), o ^^rama que es igual que HEAD~2 , para ir a sus dos padres. 
