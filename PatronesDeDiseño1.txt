Link de patrones: 
https://refactoring.guru/es 


 ********************* PATRONES DE DISEÑO ********************************
Solucionan problemas comunes, no se crearon, sino se descubrieron, es importante leer una vez todos los patrones al menos una vez en la vida.
Es decir, cuando necesitamos que4 una clase que solo sea instanciada una vez, en vez de crear nuevas instancias entonces vamos es a llamar aa esa clase.

Tipos: 
a. Creacionales: proporcionan mecanismos para crear objetos
b. Estructurales: 
c. comportamentales: 


1. Singleton: 
Si quiero un nuevo objeto que ya esta instanciado entonces lo voy a es a referenciar su espacio en memoria, mas que crear otro nuevo. (única instancia). 

2. Builder:  
Es para que sea facil crear una nueva clase, entonces se crea la clase y una clase creadora que la maneje a su antojo 

